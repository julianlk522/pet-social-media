{"ast":null,"code":"import axios from \"axios\";\nconst url = 'http://localhost:5000/posts'; // const jsonConfig = {\n//     headers: {\n//         // \"Content-Type\": \"application/json\"\n//     }\n// }\n\nconst getPosts = async () => {\n  const response = await axios.get(url);\n  const postsData = response.data;\n  return postsData;\n};\n\nconst createPost = async (newPost, token) => {\n  const config = {\n    headers: {\n      authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.post(url, newPost, config);\n  return response.data;\n};\n\nconst updatePost = async (postId, updatedPost, token) => {\n  const config = {\n    headers: {\n      authorization: `Bearer ${token}`\n    }\n  };\n\n  try {\n    const response = await axios.patch(`${url}/${postId}`, updatedPost, config);\n    console.log('post data successfully updated (postsService)', response.data);\n    return response.data;\n  } catch (error) {\n    return error.message;\n  }\n};\n\nconst likePost = async (postId, userId, token) => {\n  const config = {\n    headers: {\n      authorization: `Bearer ${token}`\n    }\n  };\n\n  try {\n    console.log('userId', userId, 'postId', postId, 'token', token);\n    const response = await axios.patch(`${url}/${postId}/${userId}/likePost`, [], config);\n    console.log('like count updated)', response.data);\n    return response.data;\n  } catch (error) {\n    return console.log(error);\n  }\n};\n\nconst deletePost = async (postId, token) => {\n  const config = {\n    headers: {\n      authorization: `Bearer ${token}`\n    }\n  };\n\n  try {\n    const response = await axios.delete(`${url}/${postId}`, config);\n    return response.data;\n  } catch (error) {\n    return console.log(error);\n  }\n};\n\nconst postsService = {\n  getPosts,\n  createPost,\n  updatePost,\n  deletePost,\n  likePost\n};\nexport default postsService;","map":{"version":3,"names":["axios","url","getPosts","response","get","postsData","data","createPost","newPost","token","config","headers","authorization","post","updatePost","postId","updatedPost","patch","console","log","error","message","likePost","userId","deletePost","delete","postsService"],"sources":["C:/Users/drpom/Desktop/Code/React/social-media/frontend/src/features/posts/postsService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst url = 'http://localhost:5000/posts'\r\n// const jsonConfig = {\r\n//     headers: {\r\n//         // \"Content-Type\": \"application/json\"\r\n//     }\r\n// }\r\n\r\nconst getPosts = async () => {\r\n    const response = await axios.get(url)\r\n    const postsData = response.data\r\n    return postsData\r\n}\r\n\r\nconst createPost = async (newPost, token) => {\r\n    const config = {\r\n        headers: {\r\n            authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    const response = await axios.post(url, newPost, config)\r\n    return response.data\r\n}\r\n\r\nconst updatePost = async (postId, updatedPost, token) => {\r\n    const config = {\r\n        headers: {\r\n            authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n    \r\n    try {\r\n        const response = await axios.patch(`${url}/${postId}`, updatedPost, config)\r\n        console.log('post data successfully updated (postsService)', response.data)\r\n        return response.data\r\n    } catch (error) {\r\n        return error.message\r\n    }\r\n}\r\n\r\nconst likePost = async (postId, userId, token) => {\r\n    const config = {\r\n        headers: {\r\n            authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n    \r\n    try {\r\n        console.log('userId', userId, 'postId', postId, 'token', token)\r\n        const response = await axios.patch(`${url}/${postId}/${userId}/likePost`, [], config)\r\n        console.log('like count updated)', response.data)\r\n        return response.data\r\n    } catch (error) {\r\n        return console.log(error)\r\n    }\r\n}\r\n\r\nconst deletePost = async (postId, token) => {\r\n    const config = {\r\n        headers: {\r\n            authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n    \r\n    try {\r\n        const response = await axios.delete(`${url}/${postId}`, config)\r\n        return response.data\r\n    } catch (error) {\r\n        return console.log(error)\r\n    }\r\n}\r\n\r\nconst postsService = {\r\n    getPosts,\r\n    createPost,\r\n    updatePost,\r\n    deletePost,\r\n    likePost,\r\n}\r\n\r\nexport default postsService"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAG,6BAAZ,C,CACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,QAAQ,GAAG,YAAY;EACzB,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAUH,GAAV,CAAvB;EACA,MAAMI,SAAS,GAAGF,QAAQ,CAACG,IAA3B;EACA,OAAOD,SAAP;AACH,CAJD;;AAMA,MAAME,UAAU,GAAG,OAAOC,OAAP,EAAgBC,KAAhB,KAA0B;EACzC,MAAMC,MAAM,GAAG;IACXC,OAAO,EAAE;MACLC,aAAa,EAAG,UAASH,KAAM;IAD1B;EADE,CAAf;EAMA,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACa,IAAN,CAAWZ,GAAX,EAAgBO,OAAhB,EAAyBE,MAAzB,CAAvB;EACA,OAAOP,QAAQ,CAACG,IAAhB;AACH,CATD;;AAWA,MAAMQ,UAAU,GAAG,OAAOC,MAAP,EAAeC,WAAf,EAA4BP,KAA5B,KAAsC;EACrD,MAAMC,MAAM,GAAG;IACXC,OAAO,EAAE;MACLC,aAAa,EAAG,UAASH,KAAM;IAD1B;EADE,CAAf;;EAMA,IAAI;IACA,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACiB,KAAN,CAAa,GAAEhB,GAAI,IAAGc,MAAO,EAA7B,EAAgCC,WAAhC,EAA6CN,MAA7C,CAAvB;IACAQ,OAAO,CAACC,GAAR,CAAY,+CAAZ,EAA6DhB,QAAQ,CAACG,IAAtE;IACA,OAAOH,QAAQ,CAACG,IAAhB;EACH,CAJD,CAIE,OAAOc,KAAP,EAAc;IACZ,OAAOA,KAAK,CAACC,OAAb;EACH;AACJ,CAdD;;AAgBA,MAAMC,QAAQ,GAAG,OAAOP,MAAP,EAAeQ,MAAf,EAAuBd,KAAvB,KAAiC;EAC9C,MAAMC,MAAM,GAAG;IACXC,OAAO,EAAE;MACLC,aAAa,EAAG,UAASH,KAAM;IAD1B;EADE,CAAf;;EAMA,IAAI;IACAS,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBI,MAAtB,EAA8B,QAA9B,EAAwCR,MAAxC,EAAgD,OAAhD,EAAyDN,KAAzD;IACA,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACiB,KAAN,CAAa,GAAEhB,GAAI,IAAGc,MAAO,IAAGQ,MAAO,WAAvC,EAAmD,EAAnD,EAAuDb,MAAvD,CAAvB;IACAQ,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmChB,QAAQ,CAACG,IAA5C;IACA,OAAOH,QAAQ,CAACG,IAAhB;EACH,CALD,CAKE,OAAOc,KAAP,EAAc;IACZ,OAAOF,OAAO,CAACC,GAAR,CAAYC,KAAZ,CAAP;EACH;AACJ,CAfD;;AAiBA,MAAMI,UAAU,GAAG,OAAOT,MAAP,EAAeN,KAAf,KAAyB;EACxC,MAAMC,MAAM,GAAG;IACXC,OAAO,EAAE;MACLC,aAAa,EAAG,UAASH,KAAM;IAD1B;EADE,CAAf;;EAMA,IAAI;IACA,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACyB,MAAN,CAAc,GAAExB,GAAI,IAAGc,MAAO,EAA9B,EAAiCL,MAAjC,CAAvB;IACA,OAAOP,QAAQ,CAACG,IAAhB;EACH,CAHD,CAGE,OAAOc,KAAP,EAAc;IACZ,OAAOF,OAAO,CAACC,GAAR,CAAYC,KAAZ,CAAP;EACH;AACJ,CAbD;;AAeA,MAAMM,YAAY,GAAG;EACjBxB,QADiB;EAEjBK,UAFiB;EAGjBO,UAHiB;EAIjBU,UAJiB;EAKjBF;AALiB,CAArB;AAQA,eAAeI,YAAf"},"metadata":{},"sourceType":"module"}