{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport postsService from \"./postsService\";\nconst initialState = {\n  posts: [],\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: ''\n};\nexport const getPosts = createAsyncThunk('posts/getPosts', async (_, thunkAPI) => {\n  try {\n    return await postsService.getPosts();\n  } catch (error) {\n    const message = error.response && error.response.data && error.resonse.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const createPost = createAsyncThunk('posts/createPost', async (newPost, thunkAPI) => {\n  try {\n    return await postsService.createPost(newPost);\n  } catch (error) {\n    const message = error.response && error.response.data && error.resonse.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {// reducers\n  },\n\n  extraReducers(builder) {\n    builder.addCase(getPosts.pending, (state, action) => {\n      state.isLoading = true;\n    }).addCase(getPosts.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.posts = action.payload;\n    }).addCase(getPosts.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    }).addCase(createPost.pending, (state, action) => {\n      state.isLoading = true;\n    }).addCase(createPost.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.posts = [...state.posts, action.payload];\n    }).addCase(createPost.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    });\n  }\n\n});\nexport default postsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","postsService","initialState","posts","isError","isSuccess","isLoading","message","getPosts","_","thunkAPI","error","response","data","resonse","toString","rejectWithValue","createPost","newPost","postsSlice","name","reducers","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","rejected","reducer"],"sources":["C:/Users/drpom/Desktop/Code/React/social-media/frontend/src/features/posts/postsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\r\nimport postsService from \"./postsService\"\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    isError: false,\r\n    isSuccess: false,\r\n    isLoading: false,\r\n    message: ''\r\n}\r\n\r\nexport const getPosts = createAsyncThunk('posts/getPosts', async (_, thunkAPI) => {\r\n    try {\r\n        return await postsService.getPosts()\r\n    } catch (error) {\r\n        const message = (error.response && error.response.data && error.resonse.data.message)\r\n        || error.message\r\n        || error.toString()\r\n\r\n        return thunkAPI.rejectWithValue(message)\r\n    }\r\n})\r\n\r\nexport const createPost = createAsyncThunk('posts/createPost', async (newPost, thunkAPI) => {\r\n    try {\r\n        return await postsService.createPost(newPost)\r\n    } catch (error) {\r\n        const message = (error.response && error.response.data && error.resonse.data.message)\r\n        || error.message\r\n        || error.toString()\r\n\r\n        return thunkAPI.rejectWithValue(message)\r\n    }\r\n})\r\n\r\nconst postsSlice = createSlice({\r\n    name: 'posts',\r\n    initialState,\r\n    reducers: {\r\n        // reducers\r\n    },\r\n    extraReducers(builder) {\r\n        builder\r\n            .addCase(getPosts.pending, (state, action) => {\r\n                state.isLoading = true\r\n            })\r\n            .addCase(getPosts.fulfilled, (state, action) => {\r\n                state.isLoading = false\r\n                state.isSuccess = true\r\n                state.posts = action.payload\r\n            })\r\n            .addCase(getPosts.rejected, (state, action) => {\r\n                state.isLoading = false\r\n                state.isError = true\r\n                state.message = action.payload\r\n            })\r\n            .addCase(createPost.pending, (state, action) => {\r\n                state.isLoading = true\r\n            })\r\n            .addCase(createPost.fulfilled, (state, action) => {\r\n                state.isLoading = false\r\n                state.isSuccess = true\r\n                state.posts = [...state.posts, action.payload]\r\n            })\r\n            .addCase(createPost.rejected, (state, action) => {\r\n                state.isLoading = false\r\n                state.isError = true\r\n                state.message = action.payload\r\n            })\r\n    }\r\n})\r\n\r\nexport default postsSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}