{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drpom\\\\Desktop\\\\Code\\\\React\\\\social-media\\\\frontend\\\\src\\\\components\\\\Form.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper, Box } from '@mui/material';\nimport FileBase from 'react-file-base64';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createPost, updatePost, reset } from '../features/posts/postsSlice.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form(_ref) {\n  _s();\n\n  let {\n    currentPostId,\n    setCurrentPostId\n  } = _ref;\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    imgBase64: ''\n  });\n  const dispatch = useDispatch();\n  const currentPost = useSelector(state => currentPostId ? state.posts.postsArray.find(post => post._id === currentPostId) : null);\n  useEffect(() => {\n    currentPost && setPostData(currentPost);\n  }, [currentPost]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (currentPostId) {\n      dispatch(updatePost({\n        currentPostId,\n        postData\n      }));\n    } else {\n      dispatch(createPost(postData));\n    }\n\n    handleClear();\n  };\n\n  const handleClear = () => {\n    setCurrentPostId('null');\n    setPostData({\n      creator: '',\n      title: '',\n      message: '',\n      tags: [],\n      imgBase64: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      // m: 2,\n      p: 2,\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        align: \"center\",\n        sx: {\n          mt: 2\n        },\n        children: [currentPostId ? 'Edit your ' : 'Make a New ', \"Post\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: postData.creator,\n        onChange: e => setPostData({ ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '90%',\n          my: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: _ref2 => {\n            let {\n              base64\n            } = _ref2;\n            return setPostData({ ...postData,\n              imgBase64: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        sx: {\n          my: 1\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: handleClear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"uwDanqIKihYYRtwA6XfVwZXRL6c=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Typography","Paper","Box","FileBase","useDispatch","useSelector","createPost","updatePost","reset","Form","currentPostId","setCurrentPostId","postData","setPostData","creator","title","message","tags","imgBase64","dispatch","currentPost","state","posts","postsArray","find","post","_id","handleSubmit","e","preventDefault","handleClear","p","display","flexWrap","justifyContent","mt","target","value","split","width","my","base64"],"sources":["C:/Users/drpom/Desktop/Code/React/social-media/frontend/src/components/Form.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {TextField, Button, Typography, Paper, Box} from '@mui/material'\r\nimport FileBase from 'react-file-base64'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { createPost, updatePost, reset } from '../features/posts/postsSlice.js'\r\n\r\nfunction Form({currentPostId, setCurrentPostId}) {\r\n  const [postData, setPostData] = useState({\r\n    creator: '',\r\n    title: '',\r\n    message: '',\r\n    tags: '',\r\n    imgBase64: '',\r\n  })\r\n\r\n  const dispatch = useDispatch()\r\n  const currentPost = useSelector((state) => currentPostId ? state.posts.postsArray.find((post) => post._id === currentPostId) : null)\r\n\r\n  useEffect(() => {\r\n    currentPost && setPostData(currentPost)\r\n  }, [currentPost])\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (currentPostId) {\r\n    dispatch(updatePost({currentPostId, postData}))\r\n    } else {\r\n      dispatch(createPost(postData))\r\n    }\r\n    handleClear()\r\n  }\r\n\r\n  const handleClear = () => {\r\n    setCurrentPostId('null')\r\n    setPostData({\r\n      creator: '',\r\n      title: '',\r\n      message: '',\r\n      tags: [],\r\n      imgBase64: '',\r\n    })\r\n  }\r\n  \r\n  return (\r\n    <Paper sx={{\r\n      // m: 2,\r\n      p: 2,\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'center'\r\n    }}>\r\n      <form \r\n        autoComplete='off' \r\n        noValidate \r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Typography \r\n          variant='h6'\r\n          align='center'\r\n          sx={{\r\n            mt: 2,\r\n          }}\r\n        >\r\n          {currentPostId ? 'Edit your ' : 'Make a New '}Post\r\n        </Typography>\r\n        <TextField \r\n          margin='normal'\r\n          name='creator' \r\n          variant='outlined' \r\n          label=\"Creator\" \r\n          fullWidth\r\n          value={postData.creator}\r\n          onChange={(e) => setPostData({\r\n            ...postData,\r\n            creator: e.target.value\r\n          })}\r\n        />\r\n        <TextField \r\n          margin='normal'\r\n          name='title' \r\n          variant='outlined' \r\n          label=\"Title\" \r\n          fullWidth\r\n          value={postData.title}\r\n          onChange={(e) => setPostData({\r\n            ...postData,\r\n            title: e.target.value\r\n          })}\r\n        />\r\n        <TextField \r\n          margin='normal'\r\n          name='message' \r\n          variant='outlined' \r\n          label=\"Message\" \r\n          fullWidth\r\n          value={postData.message}\r\n          onChange={(e) => setPostData({\r\n            ...postData,\r\n            message: e.target.value\r\n          })}\r\n        />\r\n        <TextField \r\n          margin='normal'\r\n          name='tags' \r\n          variant='outlined' \r\n          label=\"Tags\" \r\n          fullWidth\r\n          value={postData.tags}\r\n          onChange={(e) => setPostData({\r\n            ...postData,\r\n            tags: e.target.value.split(',')\r\n          })}\r\n        />\r\n\r\n        <Box\r\n          sx={{\r\n            width: '90%',\r\n            my: 1,\r\n          }}\r\n        >\r\n          <FileBase \r\n            type='file'\r\n            multiple={false}\r\n            onDone={({base64}) => setPostData({\r\n                ...postData,\r\n                imgBase64: base64\r\n            })}\r\n          />\r\n        </Box>\r\n\r\n        <Button \r\n          variant='contained' \r\n          size='large' \r\n          type='submit' \r\n          fullWidth\r\n          sx={{\r\n            my: 1,\r\n          }}\r\n        >\r\n          Submit\r\n        </Button>\r\n\r\n        <Button \r\n          variant='contained'\r\n          color='secondary' \r\n          size='small' \r\n          onClick={handleClear} \r\n          fullWidth\r\n        >\r\n          Clear\r\n        </Button>\r\n      </form>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default Form"],"mappings":"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"},"metadata":{},"sourceType":"module"}