{"ast":null,"code":"import * as api from '../../api/index.js';\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nconst initialState = {\n  posts: [],\n  status: 'idle',\n  error: null\n};\nexport const getPosts = createAsyncThunk('posts/getPosts', async () => {\n  const response = await api.getPosts();\n  return response.data;\n});\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {// reducers\n  },\n\n  extraReducers(builder) {\n    builder.addCase(getPosts.pending, (state, action) => {\n      state.status = 'loading';\n    }).addCase(getPosts.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.posts = state.posts.concat(action.payload);\n    }).addCase(getPosts.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n\n});\nexport default postsSlice.reducer;","map":{"version":3,"names":["api","createSlice","createAsyncThunk","initialState","posts","status","error","getPosts","response","data","postsSlice","name","reducers","extraReducers","builder","addCase","pending","state","action","fulfilled","concat","payload","rejected","message","reducer"],"sources":["C:/Users/drpom/Desktop/Code/React/social-media/frontend/src/features/posts/postsSlice.js"],"sourcesContent":["import * as api from '../../api/index.js'\r\nimport { createSlice } from \"@reduxjs/toolkit\"\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    status: 'idle',\r\n    error: null,\r\n}\r\n\r\nexport const getPosts = createAsyncThunk('posts/getPosts', async () => {\r\n    const response = await api.getPosts()\r\n    return response.data\r\n})\r\n\r\nconst postsSlice = createSlice({\r\n    name: 'posts',\r\n    initialState,\r\n    reducers: {\r\n        // reducers\r\n    },\r\n    extraReducers(builder) {\r\n        builder\r\n            .addCase(getPosts.pending, (state, action) => {\r\n                state.status = 'loading'\r\n            })\r\n            .addCase(getPosts.fulfilled, (state, action) => {\r\n                state.status = 'succeeded'\r\n                state.posts = state.posts.concat(action.payload)\r\n            })\r\n            .addCase(getPosts.rejected, (state, action) => {\r\n                state.status = 'failed'\r\n                state.error = action.error.message\r\n            })\r\n    }\r\n})\r\n\r\nexport default postsSlice.reducer"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,oBAArB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AAEA,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,EADU;EAEjBC,MAAM,EAAE,MAFS;EAGjBC,KAAK,EAAE;AAHU,CAArB;AAMA,OAAO,MAAMC,QAAQ,GAAGL,gBAAgB,CAAC,gBAAD,EAAmB,YAAY;EACnE,MAAMM,QAAQ,GAAG,MAAMR,GAAG,CAACO,QAAJ,EAAvB;EACA,OAAOC,QAAQ,CAACC,IAAhB;AACH,CAHuC,CAAjC;AAKP,MAAMC,UAAU,GAAGT,WAAW,CAAC;EAC3BU,IAAI,EAAE,OADqB;EAE3BR,YAF2B;EAG3BS,QAAQ,EAAE,CACN;EADM,CAHiB;;EAM3BC,aAAa,CAACC,OAAD,EAAU;IACnBA,OAAO,CACFC,OADL,CACaR,QAAQ,CAACS,OADtB,EAC+B,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC1CD,KAAK,CAACZ,MAAN,GAAe,SAAf;IACH,CAHL,EAIKU,OAJL,CAIaR,QAAQ,CAACY,SAJtB,EAIiC,CAACF,KAAD,EAAQC,MAAR,KAAmB;MAC5CD,KAAK,CAACZ,MAAN,GAAe,WAAf;MACAY,KAAK,CAACb,KAAN,GAAca,KAAK,CAACb,KAAN,CAAYgB,MAAZ,CAAmBF,MAAM,CAACG,OAA1B,CAAd;IACH,CAPL,EAQKN,OARL,CAQaR,QAAQ,CAACe,QARtB,EAQgC,CAACL,KAAD,EAAQC,MAAR,KAAmB;MAC3CD,KAAK,CAACZ,MAAN,GAAe,QAAf;MACAY,KAAK,CAACX,KAAN,GAAcY,MAAM,CAACZ,KAAP,CAAaiB,OAA3B;IACH,CAXL;EAYH;;AAnB0B,CAAD,CAA9B;AAsBA,eAAeb,UAAU,CAACc,OAA1B"},"metadata":{},"sourceType":"module"}